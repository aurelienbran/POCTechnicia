# Configuration Nginx pour le système OCR Technicia
# Version: 1.0
# Date: 2 avril 2025

server {
    listen 80;
    server_name ocr.technicia.local;
    
    # Redirection vers HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name ocr.technicia.local;
    
    # Configuration SSL
    ssl_certificate /etc/nginx/ssl/technicia.crt;
    ssl_certificate_key /etc/nginx/ssl/technicia.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # En-têtes de sécurité
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-XSS-Protection "1; mode=block";
    
    # Limite de taille pour les uploads
    client_max_body_size 50M;
    
    # Compression gzip
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    
    # Logs
    access_log /var/log/nginx/technicia_access.log;
    error_log /var/log/nginx/technicia_error.log warn;
    
    # Proxy principal vers l'application Flask
    location / {
        proxy_pass http://app:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Configuration WebSocket pour les notifications temps réel
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 300s;
    }
    
    # Fichiers statiques servis directement
    location /static/ {
        alias /app/static/;
        expires 30d;
    }
    
    # Contrôle d'état pour monitoring
    location /health {
        proxy_pass http://app:5000/api/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        access_log off;
        add_header Content-Type application/json;
    }
}

# Serveur pour Prometheus (monitoring)
server {
    listen 9090;
    server_name ocr.technicia.local;
    
    location / {
        proxy_pass http://prometheus:9090;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
}

# Serveur pour Grafana (tableaux de bord)
server {
    listen 3000;
    server_name ocr.technicia.local;
    
    location / {
        proxy_pass http://grafana:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
}
